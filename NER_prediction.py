# -*- coding: utf-8 -*-
# Transformer based Mutation Recognition of SETH Corpus (NLP-NER)
# Pipeline for prediciton of IOB-Tags in a given text using the best tuned model
# inspired by: https://huggingface.co/dslim/bert-base-NER

import torch # conda install pytorch=1.5
from transformers import AutoTokenizer, AutoModelForTokenClassification, pipeline

MODEL_NAME = "microsoft/BiomedNLP-PubMedBERT-base-uncased-abstract-fulltext"

UNIQUE_TAGS = ['O', 'B-Gene', 'I-Gene', 'B-SNP', 'I-SNP', 'B-RS']

DEVICE = torch.device('cuda') if torch.cuda.is_available() else torch.device('cpu')
print(f"\n Device: {DEVICE} \n")


def make_prediction(best_model_path, text):
    best_model = AutoModelForTokenClassification.from_pretrained(best_model_path, num_labels=len(UNIQUE_TAGS)).to(DEVICE)
    tokenizer = AutoTokenizer.from_pretrained(MODEL_NAME)
    nlp = pipeline('ner', model=best_model, tokenizer=tokenizer)
    prediction = nlp(text)
    print(text, '\n', file=open("output.txt", "w"))
    print(*prediction, sep = '\n', file=open("output.txt", "a"))
    return prediction

def main():

    print("\n -- Predict IOB-tags of a given text using best model -- \n")

    model_path = "best_model" # path to tuned model that should be used for label prediciton
    
    # text to be labeled
    text = "In human glutathione transferase P1-1 (hGSTP1-1) position 146 is occupied by a glycine residue, which is located in a bend of a long loop that together with the alpha6-helix forms a substructure (GST motif II) maintained in all soluble GSTs. In the present study G146A and G146V mutants were generated by site-directed mutagenesis in order to investigate the function played by this conserved residue in folding and stability of hGSTP1-1." 
    # --> Mutations: G146A, G146V
   
    print(f"Text to predict: \n{text}\n")
    prediction = make_prediction(model_path, text)
    print("\n Prediction of IOB-Tags (0 = O, 1 = B-Gene, 2 = I-Gene, 3 = B-SNP, 4 = I-SNP, 5 = B-RS) \n", *prediction, sep = '\n')

    print("\n -- Done Prediction --")

    return 0

if __name__ == "__main__":
    main()